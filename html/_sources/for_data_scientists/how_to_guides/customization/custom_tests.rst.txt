.. _custom_tests:

Custom Tests
================================

To run a custom test in RIME, define the custom test in a Python file. Each of the
predefined categories has a custom test definition, and there is a generic custom test
available. Only use the generic custom test when none of the custom tests for a
predefined category is suitable.

The structure of the Python file that specifies the custom test depends on the type of
custom test. Detailed descriptions of each type of custom test follow.

.. include:: tabular_custom_tests.md
   :parser: myst_parser.sphinx_

.. include:: tabular_custom_abnormal_inputs_tests.md
   :parser: myst_parser.sphinx_

.. include:: nlp_custom_tests.md
   :parser: myst_parser.sphinx_

The Python file that specifies the custom test must be accessible to the RIME instance.

The following example uploads the custom test file to RIME:

.. code-block:: python

    upload_path = client.upload_file("local/path/to/custom_test_file.py")

After uploading, include the path in the test configuration for a given run by using the
``custom_tests`` key within either the ``tests_config_path`` or ``tests_config``
variables. Each custom test config must specify a ``custom_test_type`` key, which has two
valid values:

* ``GENERIC``
* ``ABNORMAL_INPUTS``

The default value is ``GENERIC``.

You can optionally specify a ``custom_test_category`` key to control which category the
custom test shows up under. By default, RIME uses the category specified by
``custom_test_type``.

Here is an example configuration:

.. code-block:: python

    "tests_config": {
        "custom_tests": [
            {
                "test_path": upload_path
            },
            {
                "custom_test_type": "ABNORMAL_INPUTS",
                "test_path": "s3://rime-blob-storage-bucket/path/to/custom_abnormal_inputs_test.py",
                "params": {
                    "arg_1": 5,
                    "arg_2": "example_argument_string"
                },
                "custom_test_category": "Example"
            }
        ]
    }
