# Stress Tests

A stress test evaluates a machine learning model's resilience with regards to a specific
vulnerability.

## Creating a new Stress Test from the SDK

This procedure presumes a model is already loaded into RIME and that all commands are issued in a Python environment.

1.  (When a suitable [project](projects.md) does not already exist) Create a project 
    using the following [SDK command](../../../python_library/python-sdk.rst).

    >   ```python
    >   project = rime_client.create_project(
    >       name="project", description="$DESC", model_task='MODEL_TASK_BINARY_CLASSIFICATION'
    >   )
    >   ```
    
    >   You can also access an existing project using its project ID:

    >   ```python
    >   project = rime_client.get_project(MY_PROJECT_ID)
    >   ```

    >   Replace `$DESC` with a description of the project or modeling TASK_NATURAL_LANGUAGE_INFERENCE
    >   - MODEL_TASK_FILL_MASK

2.  Register a reference dataset.

    >   This example registers a dataset from a file.

    >   ```python
    >   reference_id = project.register_dataset(
    >       name=DATASET_NAME,
    >       data_params={
    >           "connection_info": {"data_file": {"path": FILE_PATH}},
    >           "data_params": {"label_col": LABEL_COL},
    >       },
    >       integration_id=INTEGRATION_ID,
    >   )
    >   ```

    >   The SDK returns the ID of the reference dataset.

3.  Register an evaluation dataset.

    >   ``` python
    >   evaluation_id = project.register_dataset(
    >       name=DATASET_NAME,
    >       data_params={
    >           "connection_info": {"data_file": {"path": FILE_PATH}},
    >           "data_params": {"label_col": LABEL_COL},
    >       },
    >       integration_id=INTEGRATION_ID,
    >   )
    >   ```

    >   The SDK returns the ID of the evaluation dataset.

4.  Register a model.

    >   This example registers a model from a `model.py` file. The 
    >   [Specify a Model](../../reference/specify_model.md) section has details on how to format `model.py` files.
    >   ```python
    >   model_id = project.register_model_from_path(
    >           name=MODEL_NAME,
    >           remote_path=S3_PATH_TO_MODEL_PY
    >   )
    >   ```

    >   This example registers a Hugging Face model.

    >   ```python
    >          model_id = project.register_model(
    >              name=MODEL_NAME,
    >              model_config={
    >                  "hugging_face": {
    >                      "model_uri": URI,
    >                      "kwargs": {
    >                          "tokenizer_uri": TOKENIZER_URI,
    >                          "class_map": MAP,
    >                          "ignore_class_names": True,
    >                      },
    >                  }
    >              },
    >          )
    >   ```

    >   The SDK returns the model ID.

5.  Create a [test run configuration](../../reference/stress_testing.md) that uses the 
    registered reference and evaluation datasets and the model, specifying a name and
    model task in addition to the IDs of the datasets and model registered earlier in
    this procedure.

    >   ```python
    >   config = {
    >       "data_info": {"ref_dataset_id": reference_id, "eval_dataset_id": evaluation_id},
    >       "model_id": model_id,
    >       "run_name": "My Stress Test Run",
    >   }
    >   ```

    >   You can also [specify predictions](../../reference/data_source) in the test run configuration.

6.  Issue the following command to start the Stress Test, specifying the configuration
    created in the previous step and the unique ID of the project that contains the
    Stress Test.

    >   ```python
    >   job = client.start_stress_test(
    >       test_run_config=config, project_id=project.project_id
    >   )
    >   ```

<!--
1.  Sign in to an RI Platform instance.  
    >   The Workspaces page appears.
2.  Select a workspace.  
    >   The workspace summary page appears, listing the projects in that workspace.
3.  Select a project.  
    >   The project summary page appears.
4.  From the left navigation bar, click *Stress Testing*.
    >   The Stress Testing page appears.
5.  Click *Create Stress Test*.
    >   The Stress Test wizard appears.
6.  From the *Test Configuration* drop-down, choose a configuration type.
    >   | Type | Description |
    >   |------|-------------|
    >   | From Project Configuration | Uses the project configuration for this stress test. |
    >   | Custom | Enables you to specify a test configuration for this stress test. |
7.  (When using Custom only) Select the types of risks to evaluate in this stress test.
8.  Click *Next*.
9.  Choose a model to test from the list of registered models or register a new model.
10. (When using a registered model) Select the model from the *Select Model* drop-down.
11. (When registering a new model) Choose whether to upload a model file or to add a model from an online registry.
12. (When uploading a new model) Type a name and tags for the model.
13. (When uploading a new model) Drag a `pkl` or `py` model file to the wizard or click *Select File* to browse the file system.
14. (When registering a new model from a registry) Type the name of the registry, the URI or file path to the model in the registry, and the registry secret.
15. Click *Next*.
16. Choose whether to use a registered reference dataset, a dataset from a connection, or a manually uploaded dataset.
17. (Using a registered reference dataset) Type the name of the registered dataset.
18. (Using a reference dataset from a connection) Type a connection name, a table name, a timestamp column, and a label column
19. (Using a reference dataset from a connection) (Optional) Activate the *Predictions (optional) toggle and enter a connection name, table name, optional timestamp column, and prediction column.
20. (Uploading a reference dataset) Drag a dataset file to the wizard or click *Select File* to browse the file system.
    >   RIME accepts datasets in the `csv`, Parquet, `jsonl`, `jsonl.gz`, and `json.gz` formats.
21. (Uploading a reference dataset) (Optional) Activate the *Predictions (optional)* toggle and enter a name, label column name, and optional prediction column name, then drag a predictions file to the wizard or click *Select File* to browse the file system.
    >   RIME accepts datasets in the `csv`, Parquet, `jsonl`, `jsonl.gz`, and `json.gz` formats.
22. Click *Next*.

The wizard closes and the new Stress Test begins initial processing.
-->
