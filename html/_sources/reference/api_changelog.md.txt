# API Changelog

## About API versions

```{admonition} Note
This page applies only to REST API versioning.
For SDK and product versioning, see
[Versioning and compatibility](versions.md).
```

Robust Intelligence provides a stable API designed to remain usable
without changes to your client code across multiple versions of the
main Robust Intelligence product. API endpoints are versioned
independently of the main Robust Intelligence product, with a given
API version typically supporting many releases of the main product.

To minimize the impact of breaking changes, we categorize our endpoint
versions as general availability ("GA") and beta:

- A GA endpoint version is fully tested and supported, and it's
  guaranteed to be backward compatible until it's deprecated. GA
  endpoints display their version number in the URI. For example, the
  v1 versioned integrations endpoint URI contains "v1", as in,
  `v1/integrations`

- Beta endpoint versions are subject to breaking changes.
  Backward compatibility is not guaranteed. A beta endpoint
  will display `-beta` in its URI. For example, a v1-beta
  integrations endpoint URI would contain `v1-beta/integrations`

### Support period for GA REST API endpoints

GA-version API endpoints (for example, v1) are not subject to breaking
changes while the version remains supported. When Robust Intelligence
plans to end support for a REST API version, we will notify you at
least 13 months before support for your API version ends. When a new
API version becomes available, its preceding version will be supported
for 13 months to give you time to transition to the upgraded API.
After the transition period, the older version will be marked as
deprecated and removed. Notifications and transition periods do not
apply to APIs marked as "beta".

## 2.4

No changes.

## 2.3

GET /v1-beta/file-scans api removed without deprecation. Use GET /v1-beta/file-scan-results instead.

## 2.2

PUT /v1/agents/deactivate/{agentId.uuid} api path removed without deprecation. Use DELETE /v1/agents/{agentId.uuid} directly instead.

/v1/firewall api paths are deprecated. They will not be supported from Robust Intelligence v2.4 onwards.

## 2.1

The `delta_lake` connection_info has been renamed to `databricks`. This loads a Databricks Delta Lake Table.
Before:
```python
{
    "connection_info": {
        "delta_lake": {
            "table_name": "Table",
        }
    },
    "data_params": ...,
}
```
After:
```python
{
    "connection_info": {
        "databricks": {
            "table_name": "Table",
        }
    },
    "data_params": ...,
}
```

**Non breaking changes from 2.0 GA to 2.1**

`data_file` type `connection_info` now supports reading a Delta Table from S3. The path to the table and its data type can be specified in a `connection_info` as:
```python
stress_test_config = {
    # other config params
    "connection_info": {
        "data_file": {
            "path": "s3://path/to/table",
            "data_type": "DATA_TYPE_DELTA_TABLE",
        }
    }
}
```

## 2.0 GA

GET /v1/logs/{jobId} api path removed without deprecation. Use GET /v1/jobs/{job_id} and use the archived_job_logs field instead.

POST /v1-beta/jobs/cancel/{jobId} api path removed without deprecation. Use POST /v1/jobs/cancel/{jobId} instead.

GET /v1-beta/jobs/{jobId} api path removed without deprecation. Use GET /v1/jobs/{jobId} instead.

GET /v1-beta/jobs/{jobId}/project-id api path removed without deprecation. Use GET /v1/jobs/{jobId}/project-id instead.

GET /v1-beta/jobs/{jobId}/test-run-id api path removed without deprecation. Use GET /v1/jobs/{jobId}/test-run-id instead.

GET /v1-beta/jobs api path removed without deprecation. Use GET /v1/jobs instead.

POST /v1/continuous-tests api path removed without deprecation. Use POST /v1/continuous-tests/{firewallId.uuid} instead.

DELETE /v1/registry/dataset/{projectId.uuid} api path removed without deprecation. Use DELETE /v1/registry/{project_id.uuid}/dataset instead.

POST /v1/registry/dataset/{projectId.uuid} api removed without deprecation. Use POST /v1/registry/{project_id.uuid}/dataset instead.

POST /v1/registry/model/{projectId.uuid} api removed without deprecation. Use POST /v1/registry/{project_id.uuid}/model instead.

DELETE /v1/registry/model/{projectId.uuid} api path removed without deprecation. Use DELETE /v1/registry/{project_id.uuid}/model instead.

POST /v1/registry/prediction/{projectId.uuid}/{modelId.uuid}/{datasetId} api path removed without deprecation. Use POST /v1/registry/{project_id.uuid}/model/{model_id.uuid}/dataset/{dataset_id}/prediction instead.

POST /v1/registry/{projectId.uuid}/prediction/{modelId.uuid}/{datasetId} api path removed without deprecation. Use POST /v1/registry/{project_id.uuid}/model/{model_id.uuid}/dataset/{dataset_id}/prediction instead.

<!---
HIDDEN FIELDS

These are needed when the oasdiff tool produces error messages which do not make sense to the end user. Instead of directly exposing these in the docs, we hide them and write a custom message for the end user.

GET /v1-beta/firewall/{firewallId.uuid}/url api sunset date '' can't be parsed for deprecated API: sunset header not found
PUT /v1/firewall/{firewall.firewallId.uuid} api sunset date '' can't be parsed for deprecated API: sunset header not found

DELETE /v1/firewall/{firewallId.uuid} api sunset date '' can't be parsed for deprecated API: sunset header not found

GET /v1/firewall/{firewallId.uuid} api sunset date '' can't be parsed for deprecated API: sunset header not found
POST /v1/firewall api sunset date '' can't be parsed for deprecated API: sunset header not found
-->

## Related Topics  
[Versioning and compatibility](versions.md)  
