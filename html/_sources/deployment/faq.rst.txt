.. _deployment_faq:

FAQ
================================

1 - Can the data plane be deployed on a *single machine* (e.g., for testing purposes)?
   Yes --- if deploying the data plane on a single machine, refer to the **Local Agent** deployment guide below:

   .. toctree::
      :maxdepth: 1

      local_agent.rst

2 - Can Robust Intelligence be deployed entirely (i.e., *both planes*) in my cloud environment?
   Yes --- if deploying *both* planes in your cloud environment, refer to the **Self-Hosted** deployment guide below.
   Note that Self-Hosted deployments follow a longer release cadence than standard deployments (see note on upgrades below).

   .. toctree::
      :maxdepth: 1

      self_hosted.rst

3 - How are product upgrades executed?
   Minor versions are released every six weeks, with routine patches implemented as necessary between releases.
   Self-Hosted deployments are released every 12 weeks.

   The upgrade process involves incrementing the versions of the Docker image(s), Helm chart(s), and Python SDK associated with your Robust Intelligence deployment.
   Robust Intelligence will reach out beforehand to coordinate each upgrade.

   API endpoints will be gracefully deprecated and released according to the API Versioning strategy (see below).

   .. toctree::
      :maxdepth: 1

      ../reference/api_changelog.md

4 - Which cloud providers does Robust Intelligence support?
   Though we design our product to be cloud-agnostic, our official testing currently covers `AWS`_ (`EKS`_), `GCP`_ (`GKE`_), and `Azure`_ (`AKS`_).

.. _AWS: https://aws.amazon.com/

.. _EKS: https://aws.amazon.com/eks/

.. _GCP: https://cloud.google.com/products/

.. _GKE: https://cloud.google.com/kubernetes-engine/

.. _Azure: https://azure.microsoft.com/en-us/

.. _AKS: https://azure.microsoft.com/en-us/products/kubernetes-service/

5 - What logs and information are needed for assistance when an isssue is encountered?
  If you encounter any issues and require assistance, please provide the logs and details of your agent deployment. To do so, execute the script below in the environment where your agent is deployed. You must have access to the environment and both ``helm`` and ``kubectl`` tools installed.

  .. code-block::

    #!/bin/bash

    current_datetime=$(date +"%Y%m%d_%H%M%S")
    dir_name="rime_agent_logs-${current_datetime}"
    mkdir "$dir_name"
    pushd "$dir_name"
    exec 2>errors.txt

    kubectl version > k8s_version.txt
    helm version > helm_version.txt

    helm get values rime-agent | awk '!/USER-SUPPLIED VALUES/' > agent_values.yaml

    kubectl get pods -o custom-columns=NAME:.metadata.name,READY:".status.containerStatuses[0].ready",STATUS:.status.phase,RESTARTS:".status.containerStatuses[0].restartCount",CREATED:.metadata.creationTimestamp,IMAGE:".spec.containers[0].image" > pods.txt
    for pod in $(kubectl get pods -o custom-columns=NAME:.metadata.name --no-headers); do
	    kubectl logs $pod > ${pod}_logs.txt
    done

    kubectl get crd | grep rbst > rbst_crds.txt
    kubectl get rimejobs > rimejobs.txt
    kubectl get crossplanerpcjobs > crossplanejobs.txt

    popd
    zip -r "$dir_name.zip" "$dir_name"
    rm -rf "$dir_name"

  The script will generate a file named ``agent_logs-{timestamp}.zip``. This file is a compressed directory containing logs and relevant data for troubleshooting. Please submit this file to our support team for further assistance.
