# ri/api/jobs/job_manager.proto
## Version: version not set

### Models


#### TestRunProgressTestBatchProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| type | string | (test run ID, test batch type) are a unique ID of the test batch. | No |
| status | [rimeTestTaskStatus](#rimetesttaskstatus) | The status of each test batch is populated by the synthesizer. | No |

#### UpsertJobRequestWriteMask

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| status | boolean |  | No |
| jobData | [UpsertJobRequestWriteMaskJobData](#upsertjobrequestwritemaskjobdata) | If the type of the job data in the mask does not match the job data, a user error should be returned. | No |
| termReason | boolean |  | No |
| agentId | boolean |  | No |
| archivedJobLogs | boolean |  | No |

#### UpsertJobRequestWriteMaskJobData

The purpose of the job data write mask is to allow selective updates
to job data through a single API. The general pattern is if a mask is
omitted, no writes will be performed. You must set the corresponding
field to true in the mask for a write to be performed.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| stress | [UpsertJobRequestWriteMaskJobDataStressTest](#upsertjobrequestwritemaskjobdatastresstest) |  | No |
| continuousInc | [UpsertJobRequestWriteMaskJobDataContinuousIncrementalTest](#upsertjobrequestwritemaskjobdatacontinuousincrementaltest) |  | No |

#### UpsertJobRequestWriteMaskJobDataContinuousIncrementalTest

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| firewallId | boolean |  | No |
| ctTestRunIds | boolean |  | No |

#### UpsertJobRequestWriteMaskJobDataStressTest

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| projectId | boolean |  | No |
| testRunId | boolean |  | No |

#### googlerpcStatus

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| code | integer |  | No |
| message | string |  | No |
| details | [ [protobufAny](#protobufany) ] |  | No |

#### protobufAny

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| @type | string |  | No |

#### rimeArchivedJobLogs

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| url | [rimeSafeURL](#rimesafeurl) |  | No |
| expirationTime | dateTime |  | No |

#### rimeContinuousTestJobProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRuns | [ [rimeContinuousTestRunProgress](#rimecontinuoustestrunprogress) ] |  | No |

#### rimeContinuousTestRunProgress

ContinuousTestRunProgress is a wrapper around TestRunProgress with
added metadata about the bins.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRun | [rimeTestRunProgress](#rimetestrunprogress) |  | No |
| binStartTime | dateTime |  | No |
| binEndTime | dateTime |  | No |

#### rimeFailJobResponse

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| job | [rimeJobMetadata](#rimejobmetadata) | The job object returned will be equivalent to reading the job with the `JOB_VIEW_BASIC` view. | No |

#### rimeFinalizeCancellationResponse

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| job | [rimeJobMetadata](#rimejobmetadata) | The job object returned will be equivalent to reading the job with the `JOB_VIEW_BASIC` view. | No |

#### rimeJobData

Note that progress may not be populated depending on the parameters of the
request.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| stress | [rimeJobDataStressTest](#rimejobdatastresstest) |  | No |
| continuousInc | [rimeJobDataContinuousIncrementalTest](#rimejobdatacontinuousincrementaltest) |  | No |
| fileScan | object |  | No |

#### rimeJobDataContinuousIncrementalTest

A continuous incremental test job runs `n` test runs, where `n` is the
number of bins specified in the dataset.
This is a production specific workflow and is used to monitor a model's
performance over time.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| firewallId | string |  | No |
| ctTestRunIds | [ string ] |  | No |
| progress | [rimeContinuousTestJobProgress](#rimecontinuoustestjobprogress) |  | No |

#### rimeJobDataStressTest

A stress test job runs a single test run over a model and dataset.
This is also known as offline testing; it is run before production
deployment of the model.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| projectId | [rimeUUID](#rimeuuid) |  | No |
| testRunId | string |  | No |
| progress | [rimeStressTestJobProgress](#rimestresstestjobprogress) |  | No |

#### rimeJobMetadata

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| jobId | string | The identifier within our job tracking system. | No |
| terminationReason | [rimeTerminationReason](#rimeterminationreason) |  | No |
| jobType | [rimeJobType](#rimejobtype) | The type of the job. | No |
| status | [statedbJobStatus](#statedbjobstatus) | The job's current status. | No |
| startTime | dateTime | The start time of the job (when the job transitions in state to RUNNING). Note, this may not be populated immediately when the job is created. | No |
| creationTime | dateTime | The time the job was created. | No |
| runningTimeSecs | double | The total running time a job took to complete if the job is finished or the current running time if the job is still in progress (seconds). | No |
| jobData | [rimeJobData](#rimejobdata) | Job-type specific data. e.g. for stress test jobs, this is populated with the project ID and the test run ID. The type of the job data payload must match the JobType in this message. | No |
| jobProgressStr | string | Pretty-printed, human-readable representation of job progress. This will only be populated for Read methods with the FULL job view. To get schema for progress for each type of job, see the field inside that job's job data message (e.g. StressTestJobProgress). Note: this is unstable, do not rely on parsing this. | No |
| cancellationRequested | boolean | Marked when the job has been requested to be cancelled by the user. This is declarative; once the user requests cancellation, the backend will conduct garbage collection on the job in the background and eventually update the status of the job to CANCELLED. | No |
| agentId | [rimeUUID](#rimeuuid) | agent_id denotes the agent this job is run on. | No |
| archivedJobLogs | [rimeArchivedJobLogs](#rimearchivedjoblogs) |  | No |

#### rimeJobType

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeJobType | string |  |  |

#### rimeSafeURL

SafeURL represents a URL that has been safely constructed.
e.g. a user clicking on this link is guaranteed to land on the RIME web app.
We use this instead of a raw str so that application code can generate
SafeURL messages in certain ways -> this provides stronger typing than just
using a string.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| url | string | A safely constructed URL. | No |

#### rimeStressTestJobProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRun | [rimeTestRunProgress](#rimetestrunprogress) |  | No |

#### rimeTerminationReason

 - TERMINATION_REASON_OOMKILLED: The job was terminated for using more memory than the amount assigned
to the job.
 - TERMINATION_REASON_GENERIC_ERROR: This is the catch-all error and is typically used for user errors.
 - TERMINATION_REASON_INTERNAL_ERROR: Specifies a system error. Contact the support team.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeTerminationReason | string |  - TERMINATION_REASON_OOMKILLED: The job was terminated for using more memory than the amount assigned to the job.  - TERMINATION_REASON_GENERIC_ERROR: This is the catch-all error and is typically used for user errors.  - TERMINATION_REASON_INTERNAL_ERROR: Specifies a system error. Contact the support team. |  |

#### rimeTestRunProgress

TestRunProgress is a shared message for representing the progress of a
single test run.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRunId | string |  | No |
| status | [rimeTestTaskStatus](#rimetesttaskstatus) |  | No |
| testBatches | [ [TestRunProgressTestBatchProgress](#testrunprogresstestbatchprogress) ] |  | No |

#### rimeTestTaskStatus

Status of individual test units, e.g. test runs, test batches, test cases.
This is different from job status because these are more abstract.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeTestTaskStatus | string | Status of individual test units, e.g. test runs, test batches, test cases. This is different from job status because these are more abstract. |  |

#### rimeUUID

Unique ID of an object in RIME.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| uuid | string | String value of the object ID. | No |

#### rimeUpsertJobResponse

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| job | [rimeJobMetadata](#rimejobmetadata) | The job object returned will be equivalent to reading the job with the `JOB_VIEW_BASIC` view. | No |

#### statedbJobStatus

TODO(AIRS-764): redesign as part of Job Monitoring consolidation with 
StateDB effort.

 - JOB_STATUS_PENDING: Resources have been created for the job but the job has not started yet.
 - JOB_STATUS_FAILED: Blanket status for user or system-related job failure.
Check the Termination Reason for details.
 - JOB_STATUS_REQUESTED: The job descriptor exists but has no resources allocated.
Jobs that remain in this status without moving to the PENDING status are
at risk of entering the FAILED status.
 - JOB_STATUS_CANCELLED: Job has been cancelled.
Cancelled jobs cannot be recovered.
 - JOB_STATUS_RECONCILING: Job is being reconciled by the operator.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| statedbJobStatus | string | TODO(AIRS-764): redesign as part of Job Monitoring consolidation with  StateDB effort.   - JOB_STATUS_PENDING: Resources have been created for the job but the job has not started yet.  - JOB_STATUS_FAILED: Blanket status for user or system-related job failure. Check the Termination Reason for details.  - JOB_STATUS_REQUESTED: The job descriptor exists but has no resources allocated. Jobs that remain in this status without moving to the PENDING status are at risk of entering the FAILED status.  - JOB_STATUS_CANCELLED: Job has been cancelled. Cancelled jobs cannot be recovered.  - JOB_STATUS_RECONCILING: Job is being reconciled by the operator. |  |