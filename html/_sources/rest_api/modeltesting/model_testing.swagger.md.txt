# ri/api/modeltesting/model_testing.proto
## Version: version not set

### /v1/continuous-tests

#### POST
##### Summary:

StartContinuousTest

##### Description:

Starts a Continuous Test and returns a Job object containing metadata for
the Test Run.

##### Parameters

| Name | Located in | Description | Required | Schema |
| ---- | ---------- | ----------- | -------- | ---- |
| body | body |  | Yes | [rimeStartContinuousTestRequest](#rimestartcontinuoustestrequest) |

##### Responses

| Code | Description | Schema |
| ---- | ----------- | ------ |
| 200 | A successful response. | [rimeStartContinuousTestResponse](#rimestartcontinuoustestresponse) |
| default | An unexpected error response. | [googlerpcStatus](#googlerpcstatus) |

### /v1/logs/{jobId}

#### GET
##### Summary:

GetLatestLogs

##### Description:

Returns the logs of the latest pod to run the test job with the 
specified job ID.

##### Parameters

| Name | Located in | Description | Required | Schema |
| ---- | ---------- | ----------- | -------- | ---- |
| jobId | path | Uniquely specifies a Job. | Yes | string |

##### Responses

| Code | Description | Schema |
| ---- | ----------- | ------ |
| 200 | A successful response.(streaming responses) | object |
| default | An unexpected error response. | [googlerpcStatus](#googlerpcstatus) |

### /v1/stress-tests/{projectId.uuid}

#### POST
##### Summary:

StartStressTest

##### Description:

Starts a Stress Test and returns a Job object containing metadata for the
Test Run.

##### Parameters

| Name | Located in | Description | Required | Schema |
| ---- | ---------- | ----------- | -------- | ---- |
| projectId.uuid | path | String value of the object ID. | Yes | string |
| body | body |  | Yes | object |

##### Responses

| Code | Description | Schema |
| ---- | ----------- | ------ |
| 200 | A successful response. | [rimeStartStressTestResponse](#rimestartstresstestresponse) |
| default | An unexpected error response. | [googlerpcStatus](#googlerpcstatus) |

### Models


#### CustomImagePullSecret

Description of the secret required to pull a custom image.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| name | string | Name of the Kubernetes pull secret that stores the required pull secret for the custom image. | No |

#### DataProfilingColumnTypeInfo

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| minNuniqueForNumeric | string (int64) | Specifies a minimum number of unique values in a column for that column  to count as a numeric column. Columns that do not meet this minimum are considered as categorical columns. | No |
| numericViolationThreshold | double | Maximum fraction of violations when assigning numeric columns (not including missing values). | No |
| categoricalViolationThreshold | double | Maximum fraction of violations when assigning categorical subtypes (not including missing values). | No |
| minUniqueProp | double | When the data has a number of unique values equal to at least the value of the min_unique_prop variable, classify the column as a column that  requires unique values. | No |
| allowFloatUnique | boolean | Allow float columns to be inferred as unique values. | No |
| numericRangeInferenceThreshold | double | The percent of non-null values that must fall within an inferrable numeric range ([0,1], [0,inf), (-inf, inf)) in order to be inferred as the valid range for a numeric column. By default, this value is 1.0,  requiring all non-null values to fall within the range for that range to be inferred. For example: if 98% of feature X falls in [0, 1] but 100% of feature X falls in [0, inf) then we'll infer [0, inf) as the valid range for feature X. However, if this threshold is 0.98, we'll instead infer [0, 1] as feature X's range. | No |
| unseenValuesAllowedCriteria | double | Either the fraction or count of unique values in the reference dataset required to infer that a categorical feature is allowed to have unseen values in the evaluation set. If the criterion is provided as a float in [0.0, 1.0], it will be treated as the fraction of unique non-null values divided by the total number of non-null values required to infer that unseen values are allowed. If provided as an integer in [2, inf), the criterion is treated as the count of non-null unique values required to infer that unseen values are allowed. | No |

#### DataProfilingFeatureRelationshipInfo

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| numFeatsToProfile | string (int64) | Number of features to profile for smart feature sampling. | No |
| computeFeatureRelationships | boolean | Whether to compute feature relationships. | No |
| computeNumericFeatureRelationships | boolean | Whether to compute feature relationships for numeric columns. | No |
| ignoreNanForFeatureRelationships | boolean | Whether to ignore nan values when computing feature relationships. | No |

#### TestRunProgressTestBatchProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| type | string | (test run ID, test batch type) are a unique ID of the test batch. | No |
| status | [rimeTestTaskStatus](#rimetesttaskstatus) | The status of each test batch is populated by the synthesizer. | No |

#### googlerpcStatus

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| code | integer |  | No |
| message | string |  | No |
| details | [ [protobufAny](#protobufany) ] |  | No |

#### protobufAny

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| @type | string |  | No |

#### protobufNullValue

`NullValue` is a singleton enumeration to represent the null value for the
`Value` type union.

 The JSON representation for `NullValue` is JSON `null`.

 - NULL_VALUE: Null value.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| protobufNullValue | string | `NullValue` is a singleton enumeration to represent the null value for the `Value` type union.   The JSON representation for `NullValue` is JSON `null`.   - NULL_VALUE: Null value. |  |

#### rimeArchivedJobLogs

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| url | [rimeSafeURL](#rimesafeurl) |  | No |
| expirationTime | dateTime |  | No |

#### rimeContinuousTestJobProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRuns | [ [rimeContinuousTestRunProgress](#rimecontinuoustestrunprogress) ] |  | No |

#### rimeContinuousTestRunProgress

ContinuousTestRunProgress is a wrapper around TestRunProgress with
added metadata about the bins.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRun | [rimeTestRunProgress](#rimetestrunprogress) |  | No |
| binStartTime | dateTime |  | No |
| binEndTime | dateTime |  | No |

#### rimeGetLatestLogsResponse

GetLatestLogsResponse is the response for GetLatestLogs containing the logs
of the latest pod to run a specified job.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| chunk | string | A chunk of the logs to be returned to the client. Size is bounded to 1000000 bytes. | No |

#### rimeJobData

Note that progress may not be populated depending on the parameters of the
request.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| stress | [rimeJobDataStressTest](#rimejobdatastresstest) |  | No |
| continuousInc | [rimeJobDataContinuousIncrementalTest](#rimejobdatacontinuousincrementaltest) |  | No |
| fileScan | object |  | No |

#### rimeJobDataContinuousIncrementalTest

A continuous incremental test job runs `n` test runs, where `n` is the
number of bins specified in the dataset.
This is a production specific workflow and is used to monitor a model's
performance over time.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| firewallId | string |  | No |
| ctTestRunIds | [ string ] |  | No |
| progress | [rimeContinuousTestJobProgress](#rimecontinuoustestjobprogress) |  | No |

#### rimeJobDataStressTest

A stress test job runs a single test run over a model and dataset.
This is also known as offline testing; it is run before production
deployment of the model.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| projectId | [rimeUUID](#rimeuuid) |  | No |
| testRunId | string |  | No |
| progress | [rimeStressTestJobProgress](#rimestresstestjobprogress) |  | No |

#### rimeJobMetadata

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| jobId | string | The identifier within our job tracking system. | No |
| terminationReason | [rimeTerminationReason](#rimeterminationreason) |  | No |
| jobType | [rimeJobType](#rimejobtype) | The type of the job. | No |
| status | [statedbJobStatus](#statedbjobstatus) | The job's current status. | No |
| startTime | dateTime | The start time of the job (when the job transitions in state to RUNNING). Note, this may not be populated immediately when the job is created. | No |
| creationTime | dateTime | The time the job was created. | No |
| runningTimeSecs | double | The total running time a job took to complete if the job is finished or the current running time if the job is still in progress (seconds). | No |
| jobData | [rimeJobData](#rimejobdata) | Job-type specific data. e.g. for stress test jobs, this is populated with the project ID and the test run ID. The type of the job data payload must match the JobType in this message. | No |
| jobProgressStr | string | Pretty-printed, human-readable representation of job progress. This will only be populated for Read methods with the FULL job view. To get schema for progress for each type of job, see the field inside that job's job data message (e.g. StressTestJobProgress). Note: this is unstable, do not rely on parsing this. | No |
| cancellationRequested | boolean | Marked when the job has been requested to be cancelled by the user. This is declarative; once the user requests cancellation, the backend will conduct garbage collection on the job in the background and eventually update the status of the job to CANCELLED. | No |
| agentId | [rimeUUID](#rimeuuid) | agent_id denotes the agent this job is run on. | No |
| archivedJobLogs | [rimeArchivedJobLogs](#rimearchivedjoblogs) |  | No |

#### rimeJobType

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeJobType | string |  |  |

#### rimeSafeURL

SafeURL represents a URL that has been safely constructed.
e.g. a user clicking on this link is guaranteed to land on the RIME web app.
We use this instead of a raw str so that application code can generate
SafeURL messages in certain ways -> this provides stronger typing than just
using a string.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| url | string | A safely constructed URL. | No |

#### rimeStartContinuousTestRequest

StartContinuousTestRequest is the request object containing the firewall
information and the configurations for the Continuous Test.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| firewallId | [rimeUUID](#rimeuuid) | Uniquely specifies a Firewall. | No |
| testRunIncrementalConfig | [testrunTestRunIncrementalConfig](#testruntestrunincrementalconfig) | The configuration used for the Continuous Test. | No |
| overrideExistingBins | boolean |  | No |
| experimentalFields | object | Fields that enable experimental functionality.  WARNING: these fields are experimental; ie, their functionality may not be reliable or backwards-compatible. Do not use these fields in production. | No |

#### rimeStartContinuousTestResponse

StartContinuousTestResponse is the response object returned from
StartContinuousTest that contains the job info.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| job | [rimeJobMetadata](#rimejobmetadata) | Details for the job that was started. | No |

#### rimeStartStressTestResponse

StartStressTestResponse is a response object returned from the
StartStressTest call
that contains the job information.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| job | [rimeJobMetadata](#rimejobmetadata) | Details for the job that was started. | No |

#### rimeStressTestJobProgress

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRun | [rimeTestRunProgress](#rimetestrunprogress) |  | No |

#### rimeTerminationReason

 - TERMINATION_REASON_OOMKILLED: The job was terminated for using more memory than the amount assigned
to the job.
 - TERMINATION_REASON_GENERIC_ERROR: This is the catch-all error and is typically used for user errors.
 - TERMINATION_REASON_INTERNAL_ERROR: Specifies a system error. Contact the support team.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeTerminationReason | string |  - TERMINATION_REASON_OOMKILLED: The job was terminated for using more memory than the amount assigned to the job.  - TERMINATION_REASON_GENERIC_ERROR: This is the catch-all error and is typically used for user errors.  - TERMINATION_REASON_INTERNAL_ERROR: Specifies a system error. Contact the support team. |  |

#### rimeTestRunProgress

TestRunProgress is a shared message for representing the progress of a
single test run.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testRunId | string |  | No |
| status | [rimeTestTaskStatus](#rimetesttaskstatus) |  | No |
| testBatches | [ [TestRunProgressTestBatchProgress](#testrunprogresstestbatchprogress) ] |  | No |

#### rimeTestTaskStatus

Status of individual test units, e.g. test runs, test batches, test cases.
This is different from job status because these are more abstract.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| rimeTestTaskStatus | string | Status of individual test units, e.g. test runs, test batches, test cases. This is different from job status because these are more abstract. |  |

#### rimeUUID

Unique ID of an object in RIME.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| uuid | string | String value of the object ID. | No |

#### runtimeinfoCustomImage

CustomImage is an external image provided by the customer.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| name | string | Name of the custom image (e.g. a docker image name). | No |
| pullSecret | [CustomImagePullSecret](#customimagepullsecret) | Secret used to pull the custom image. | No |

#### runtimeinfoCustomImageType

CustomImageType is a union of all possible custom managed image and RI
managed image.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| customImage | [runtimeinfoCustomImage](#runtimeinfocustomimage) |  | No |
| managedImageName | string | Name of the RI managed image. | No |

#### runtimeinfoResourceRequest

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| ramRequestMegabytes | string (uint64) | Megabytes of RAM requested for the stress test job. | No |
| cpuRequestMillicores | string (uint64) | Millicores of CPU requested for the stress test job. | No |

#### runtimeinfoRunTimeInfo

RuntimeInfo contains information about how a job should be run.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| agentId | [rimeUUID](#rimeuuid) | ID of the agent this job should be run on. If not specified, the default agent for the workspace is used. | No |
| customImage | [runtimeinfoCustomImageType](#runtimeinfocustomimagetype) |  | No |
| resourceRequest | [runtimeinfoResourceRequest](#runtimeinforesourcerequest) |  | No |
| explicitErrors | boolean | If true, the job will not ignore silent errors. | No |
| randomSeed | string (int64) | Random seed to use for the job, so that test job result will be deterministic. | No |

#### statedbJobStatus

TODO(AIRS-764): redesign as part of Job Monitoring consolidation with 
StateDB effort.

 - JOB_STATUS_PENDING: Resources have been created for the job but the job has not started yet.
 - JOB_STATUS_FAILED: Blanket status for user or system-related job failure.
Check the Termination Reason for details.
 - JOB_STATUS_REQUESTED: The job descriptor exists but has no resources allocated.
Jobs that remain in this status without moving to the PENDING status are
at risk of entering the FAILED status.
 - JOB_STATUS_CANCELLED: Job has been cancelled.
Cancelled jobs cannot be recovered.
 - JOB_STATUS_RECONCILING: Job is being reconciled by the operator.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| statedbJobStatus | string | TODO(AIRS-764): redesign as part of Job Monitoring consolidation with  StateDB effort.   - JOB_STATUS_PENDING: Resources have been created for the job but the job has not started yet.  - JOB_STATUS_FAILED: Blanket status for user or system-related job failure. Check the Termination Reason for details.  - JOB_STATUS_REQUESTED: The job descriptor exists but has no resources allocated. Jobs that remain in this status without moving to the PENDING status are at risk of entering the FAILED status.  - JOB_STATUS_CANCELLED: Job has been cancelled. Cancelled jobs cannot be recovered.  - JOB_STATUS_RECONCILING: Job is being reconciled by the operator. |  |

#### testrunDataInfo

DataInfo uniquely specifies reference and evaluation Datasets.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| refDatasetId | string | Uniquely specifies a reference Dataset. | No |
| evalDatasetId | string | Uniquely specifies an evaluation Dataset. | No |

#### testrunDataProfiling

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| numQuantiles | string (int64) | The number of quantiles into which numeric subsets are split. | No |
| numSubsets | string (int64) | The number of subsets to test (sorted by count). | No |
| columnTypeInfo | [DataProfilingColumnTypeInfo](#dataprofilingcolumntypeinfo) |  | No |
| featureRelationshipInfo | [DataProfilingFeatureRelationshipInfo](#dataprofilingfeaturerelationshipinfo) |  | No |

#### testrunModelProfiling

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| nrowsForSummary | string (int64) | Number of rows to perform inference on the model if no predictions. | No |
| nrowsForFeatureImportance | string (int64) | Number of rows to calculate feature importance over. | No |
| metricConfigsJson | string | A JSON map of the metric API name to kwargs, allowing configuratbility of  any metric. | No |
| impactMetric | string | Default impact metric. | No |
| impactLabelThreshold | double | Threshold for using labeled performance metrics vs prediction metrics for model impact, given partial labels. | No |
| driftImpactMetric | string | Default drift impact metric. | No |
| subsetSummaryMetric | string | The subset performance degradation summary metric is calculated by taking the difference between the worst subset degradation and the overall degradation of the configured metric. | No |
| numFeatsForSubsetSummary | string (int64) | Number of features over which the subset performance degradation summary metric is aggregated. | No |

#### testrunProfilingConfig

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| dataProfiling | [testrunDataProfiling](#testrundataprofiling) |  | No |
| modelProfiling | [testrunModelProfiling](#testrunmodelprofiling) |  | No |

#### testrunTestCategory

TestCategory contains information about a given category of RIME tests to
run.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| type | [testrunTestCategoryType](#testruntestcategorytype) | The specific category that this message refers to. | No |
| runSt | boolean | Specifies whether to run this test in Stress Testing. | No |
| runCt | boolean | Specifies whether to run this test in Continuous Testing. | No |

#### testrunTestCategoryType

TestCategoryType contains all the possible values for test categories that
can be run in RIME.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testrunTestCategoryType | string | TestCategoryType contains all the possible values for test categories that can be run in RIME. |  |

#### testrunTestRunConfig

TestRunConfig contains the configuration necessary to run a Stress Test.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| runName | string | Name for this Test Run. | No |
| modelId | [rimeUUID](#rimeuuid) | Uniquely specifies a Model. | No |
| dataInfo | [testrunDataInfo](#testrundatainfo) | Uniquely specifies reference and evaluation Datasets. | No |
| runTimeInfo | [runtimeinfoRunTimeInfo](#runtimeinforuntimeinfo) | Runtime-specific parameters associated with the Test Run. | No |
| profilingConfig | [testrunProfilingConfig](#testrunprofilingconfig) | Configuration for the data and model profiling steps. | No |
| testSuiteConfig | [testrunTestSuiteConfig](#testruntestsuiteconfig) | Configuration for specific RIME tests in the test suite. | No |

#### testrunTestRunIncrementalConfig

TestRunIncrementalConfig contains the configuration necessary to run a
Continuous Test.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| evalDatasetId | string | Uniquely specifies an evaluation Dataset. | No |
| runTimeInfo | [runtimeinfoRunTimeInfo](#runtimeinforuntimeinfo) | Runtime-specific parameters associated with the Test Run. | No |

#### testrunTestSensitivity

TestSensitivity specifies how sensitive to make a RIME test. This setting
controls the thresholds for what constitutes a 'failure' in a given test
case, with TEST_SENSITIVITY_LESS_SENSITIVE allowing the widest margin of
error, and TEST_SENSITIVITY_MORE_SENSITIVE allowing the narrowest.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| testrunTestSensitivity | string | TestSensitivity specifies how sensitive to make a RIME test. This setting controls the thresholds for what constitutes a 'failure' in a given test case, with TEST_SENSITIVITY_LESS_SENSITIVE allowing the widest margin of error, and TEST_SENSITIVITY_MORE_SENSITIVE allowing the narrowest. |  |

#### testrunTestSuiteConfig

TestSuiteConfig contains configuration for specific RIME tests in the test
suite, configures which test categories to run, and configures the overall
test sensitivity settings.

| Name | Type | Description | Required |
| ---- | ---- | ----------- | -------- |
| categories | [ [testrunTestCategory](#testruntestcategory) ] | List of test categories to be run. | No |
| globalTestSensitivity | [testrunTestSensitivity](#testruntestsensitivity) | The test sensitivity setting to be applied to all tests. | No |
| individualTestsConfig | string | A serialized JSON blob including a config for each test. | No |
| customTests | [ string ] | A list of JSON custom test configurations. | No |